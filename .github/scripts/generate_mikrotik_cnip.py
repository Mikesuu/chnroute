# filename: scripts/generate_mikrotik_cnip.py
import os
import requests
from datetime import datetime

# 配置
CIDRS_CN_URL = "https://raw.githubusercontent.com/zhiyi7/gfw-pac/master/cidrs-cn.txt"
OUTPUT_FILE = "output/mikrotik_cn_ip.rsc"
ADDRESS_LIST_NAME = "CN_IP_LIST"
COMMENT = "China IP - Generated by Mikesuu/chnroute"

# 您手动指定的局域网网段 (已包含 10.10.10.0/25)
STATIC_LOCAL_NETS = [
    "10.10.10.0/25",
]

def fetch_cidrs(url, timeout=15):
    """从URL下载CIDR列表"""
    print(f"[FETCH] Downloading CIDRs from {url}")
    try:
        r = requests.get(url, timeout=timeout)
        r.raise_for_status()
        lines = [line.strip() for line in r.text.splitlines() if line.strip() and not line.startswith('#')]
        return lines
    except requests.exceptions.RequestException as e:
        print(f"[ERROR] Failed to download CIDRs: {e}")
        return []

def generate_mikrotik_script(cidrs):
    """将CIDR列表转换为Mikrotik脚本格式"""
    print(f"[CONVERT] Generating Mikrotik script for {len(cidrs)} CIDRs.")
    
    timestamp = datetime.utcnow().strftime("%Y-%m-%d %H:%M UTC")
    
    script_lines = []
    
    script_lines.append(f"#: Generated: {timestamp}")
    script_lines.append(f"#: Source: {CIDRS_CN_URL} & Static List")
    script_lines.append(f"#: List Name: {ADDRESS_LIST_NAME}")
    script_lines.append(f"#: Count: {len(cidrs) + len(STATIC_LOCAL_NETS)}")
    script_lines.append("")
    
    script_lines.append(f"/ip firewall address-list remove [find list=\"{ADDRESS_LIST_NAME}\"]")
    
    script_lines.append("/ip firewall address-list")
    
    for cidr in cidrs:
        script_lines.append(f"add list={ADDRESS_LIST_NAME} address={cidr} comment=\"{COMMENT}\"")
    
    for net in STATIC_LOCAL_NETS:
        script_lines.append(f"add list={ADDRESS_LIST_NAME} address={net} comment=\"Static Local Net\"")
        
    return "\n".join(script_lines)

def main():
    os.makedirs(os.path.dirname(OUTPUT_FILE), exist_ok=True)
    
    cidrs = fetch_cidrs(CIDRS_CN_URL)
    
    if not cidrs:
        print("[FAIL] No CIDRs obtained. Skipping script generation.")
        return
        
    mikrotik_script = generate_mikrotik_script(cidrs)
    
    with open(OUTPUT_FILE, "w", encoding="utf-8") as f:
        f.write(mikrotik_script)
        
    print(f"[DONE] Mikrotik script saved to {OUTPUT_FILE}")

if __name__ == "__main__":
    main()
